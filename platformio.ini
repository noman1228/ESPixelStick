; PlatformIO Project Configuration File for ESPixelStick
; https://docs.platformio.org/page/projectconf.html
;
; Local configuration should be done in platformio_user.ini

[platformio]
default_envs = esp32_jmt_eth, esp32_matrix, esp32_jmt
src_dir = ./src
data_dir = ./data
build_cache_dir = ./.pio/.buildcache
packages_dir = ./.pio/packages
cache_dir = ./.pio/cache
extra_configs = platformio_user.ini

;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;
; Baseline build environment                                         ;
; https://docs.platformio.org/en/latest/projectconf/section_env.html ;
;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;
[env]
framework = arduino
monitor_speed = 115200
upload_speed = 921600
lib_compat_mode = strict
board_build.filesystem = littlefs
; build_type = debug
lib_deps =
    adafruit/Adafruit PWM Servo Driver Library @ ^2.4.0
    bblanchon/ArduinoJson @ ^7.3.0
    djgrrr/Int64String @ ^1.1.1
    https://github.com/MartinMueller2003/ESPAsyncE131
    https://github.com/greiman/SdFat @ ^2.3.0
    https://github.com/MartinMueller2003/ESPAsyncTCP
    https://github.com/MartinMueller2003/ESPAsyncWebServer
    https://github.com/marvinroger/async-mqtt-client @ ^0.9.0
    https://github.com/paulstoffregen/Time @ ^1.6.1
    https://github.com/MartinMueller2003/Artnet
    https://github.com/MartinMueller2003/Espalexa
    https://github.com/MartinMueller2003/SimpleFTPServer
    https://github.com/olikraus/U8g2_Arduino
extra_scripts =
    .scripts/download_fs.py
    pre:.scripts/pio-version.py
    post:.scripts/CopyTargets.py
build_flags =
    -D ENABLE_DEDICATED_SPI=1 ; instruct SdFat to take ownership of the spi device
    -D SDFAT_FILE_TYPE=3 ; SdFat full support
    -D USE_LONG_FILE_NAMES=1 ; SdFat
    -D MAINTAIN_FREE_CLUSTER_COUNT=1 ; SdFat
    -D CHECK_FLASH_PROGRAMMING=0 ; SdFat
    -D INCLUDE_SDIOS=1 ; SdFat
;    -D USE_DBG_MACROS=2 ; SdFat
    -D SUPPORT_FTP
;    -D FTP_SERVER_DEBUG
;    -D FTP_ADDITIONAL_DEBUG
;    -D DEBUG_FSEQ
;    -D USE_SERIAL_DEBUG_COUNTERS=1
;    -D USE_UART_DEBUG_COUNTERS=1
;    -D USE_PIXEL_DEBUG_COUNTERS=1
;    -D DEBUG_FILE_HANDLES=1
;    -D DEBUG_ESP_PORT=Serial
;    -D DEBUG_ESP_OOM
;    -D DEBUG_ESP_ASYNC_TCP=1
    -D DISABLE_FS_H_WARNING=1
    -I ./ESPixelStick/src
    -I ./include
    -I ./include/network
    -mtext-section-literals
    -Wl,-Map=firmware.map
    -Wl,--cref
;    -fstack-protector-all
lib_ignore =
	ESP Async WebServer
	; AsyncTCP
	LittleFS_esp32		; force the use of the ESP32 built into the core version

;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;
; ESP8266 defaults for 4MB flash                                     ;
; https://docs.platformio.org/en/latest/platforms/espressif8266.html ;
;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;
[esp8266]
platform = espressif8266 @ ^4.2.1 ; Arduino Core v3.0.2
board_build.f_cpu = 160000000L
board_build.ldscript = eagle.flash.4m2m.ld
; build_type = debug
; monitor_filters = esp8266_exception_decoder ; requires build_type = debug
build_flags =
    ${env.build_flags}
    -D PIO_FRAMEWORK_ARDUINO_LWIP2_HIGHER_BANDWIDTH_LOW_FLASH
    -D NDEBUG        ; https://github.com/esp8266/Arduino/issues/3978
    -D FP_IN_IROM    ; https://github.com/esp8266/Arduino/pull/7180
    -D PIO_FRAMEWORK_ARDUINO_MMU_CACHE16_IRAM48
;    -D CONFIG_LWIP_MAX_SOCKETS=1 ; does not seem to have any impact
;    -D LWIP_MAX_SOCKETS=1        ; does not seem to have any impact
;    -D VTABLES_IN_IRAM
    -D VTABLES_IN_FLASH
    -D DEFAULT_FTP_SERVER_NETWORK_TYPE_ESP8266=2
    -D DEFAULT_STORAGE_TYPE_ESP8266=2
lib_ignore =
    Ethernet ; Remove once Art-Net is fixed / replaced to not depend on Ethernet in lib config
    ; ESPAsyncTCP
lib_deps =
    ${env.lib_deps}
    me-no-dev/ESPAsyncUDP
extra_scripts =
    ${env.extra_scripts}
    pre:.scripts/deleteSD.py

;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;
; ESP32 defaults for 4MB flash                                     ;
; https://docs.platformio.org/en/latest/platforms/espressif32.html ;
;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;
[esp32]
platform = espressif32 @ ^6.10.0
board_build.partitions = ESP32_partitions.csv
; monitor_filters = esp32_exception_decoder
; monitor_filters = esp32_exception_decoder, time
build_flags =
    ${env.build_flags}
    -D ARDUINO_LOOP_STACK_SIZE=12288
    -D DEFAULT_FTP_SERVER_NETWORK_TYPE_ESP32=6
    -D DEFAULT_STORAGE_TYPE_ESP32=2
    -D SUPPORT_UNZIP=1
;    -D MAKECRCH=1 ; force the unzip to make the CRC table dynamically
;    -D DYNAMIC_CRC_TABLE=1 ; unzip uses this
    -D NOBYFOUR=1 ; reduced unzip table size
    -D CONFIG_DISABLE_HAL_LOCKS=1
    -D CONFIG_RMT_ISR_IRAM_SAFE=yes
;    -D USE_RMT_DEBUG_COUNTERS=1
;    -D DEBUG_RMT_XLAT_ISSUES=1
build_unflags =
    ${env.build_unflags}
    -D BOARD_HAS_PSRAM
    -mfix-esp32-psram-cache-issue
    -mfix-esp32-psram-cache-strategy=memw

lib_deps =
    ${env.lib_deps}
    mathieucarbou/OneWire @ ^2.3.9
    https://github.com/matmunk/DS18B20
    https://github.com/bitbank2/unzipLIB
extra_scripts = ${env.extra_scripts}
    .scripts/replace_fs.py

;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;
; ESP32 pulling from upstream core ;
;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;
[esp32git]
extends = esp32
build_flags =
    ${esp32.build_flags}
platform = https://github.com/platformio/platform-espressif32
;platform_packages =
;    framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git#3.0.4
board_build.arduino.upstream_packages = no

;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;
; Build targets (environments) ;
;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;
[esp32_cust]
extends = esp32
build_type = release
build_flags =
    ${esp32.build_flags}
;    -D FLASH_EXTRA_IMAGES
;    -D ESPS_VERSION="4.xXx"
 ;   -DCORE_DEBUG_LEVEL=5


[env:esp32_jmt]
extends = esp32_cust
board = az-delivery-devkit-v4
board_build.partitions = ESP32_partitions.csv
build_flags =
    ${esp32_cust.build_flags}
    -D BOARD_NAME=\"JMT_CONTROLLER\"
    -D BOARD_ESP32_JMT
    -D SUPPORT_OLED
    
[env:esp32_mini]
extends = esp32_cust
board = az-delivery-devkit-v4
board_build.partitions = ESP32_partitions.csv
build_flags =
    ${esp32_cust.build_flags}
    -D BOARD_NAME=\"JMT_MINI\"
    -D BOARD_ESP32_JMT_MINI
    -D SUPPORT_OLED

[env:esp32_jmt_eth]
extends = esp32_cust
board = az-delivery-devkit-v4
board_build.partitions = ESP32_partitions.csv
build_flags =
    ${esp32_cust.build_flags}
    -D BOARD_NAME=\"JMT_CONTROLLER\"
    -D BOARD_ESP32_JMT_ETH
    -I .pio/packages/framework-arduinoespressif32/libraries/Ethernet/src
    -D SUPPORT_OLED
    -D ESP_SCL_PIN=33
    -D ESP_SDA_PIN=32



[env:esp32_matrix]
extends = esp32_cust
board = az-delivery-devkit-v4
build_flags =
    ${esp32_cust.build_flags}
    -D BOARD_NAME=\"JMT_MATRIX\"
    -D BOARD_ESP32_JMTMATRIX
